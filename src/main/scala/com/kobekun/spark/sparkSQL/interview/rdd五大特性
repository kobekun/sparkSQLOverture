
rdd五大特性：
    1、一系列父rdd
        血缘关系，有利于故障恢复。弊端是假如多个rdd都依赖于同一个父rdd，那么
        要重新计算父rdd

        打断血统关系：
         1) checkpoint，失效不可恢复
         2) cache，缓存失效key利用血缘恢复

    2、一系列分区
        分区key增加计算的并行度
        注意点：
            数据源处分区数取决于数据源类型
            shuffle分区数取决于shuffle分区器
            数据倾斜分两种：1、分区数据量不均匀 2、key不均匀

        kafka rdd分片取决于消费的kafka分区数
        文件类型rdd，取决于文件大小，文件数，文件是否被压缩

    3、每个分区一个计算函数

        用户需编写的针对分区的计算函数，在同一个stage内部以pipeline的形式
        运行避免数据落地磁盘和线程切换的开销

        注意：mapPartition和map的区别，foreachPartition和foreach的区别

        比如说一个分区有1，2,3 在rdd1.map(_*10),把RDD里面的每一个元素取出
        来乘以10，每个分片都应用这个map的函数

    4、数据本地性：

        可以为rdd指定数据本地性：
        process、node、rack、any、no

        数据本地性可能造成task任务倾斜于某个executor，调优时注意

    5、分区器

        针对key-value类型rdd可以指定一个分区器，默认是hashpartitioner

        在某些特定的场合需要自定义分区器，比如解决key倾斜的二次聚合。














